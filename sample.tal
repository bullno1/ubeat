|10 @Console/vector $2 &read $5 &type $1 &write $1 &error $1
|90 @Mouse/vector $2 &x $2 &y $2 &state $4 &scrollx $2 &scrolly $2

(doc The bytebeat device )
|d0 @Bytebeat
	(doc Bytebeat vector, invoked 8000 times per second )
	&vector $2
	(doc The current time input or "t" in bytebeat )
	&t $2
	(doc The play velocity, it can be set to pause or playing backward )
	&v $2
	(doc The bytebeat output.
	Writing to this outside of a bytebeat vector will have no effect )
	&b $1
	(doc Device options )
	&options $1

|00 @memory-byte $1

|100 @on-reset ( -> )
	;on-beat .Bytebeat/vector DEO2
	#03 .Bytebeat/options DEO ( enable both waveform and fft )
	;on-mouse .Mouse/vector DEO2
	.memory-byte LDZ ?{ #+42 .memory-byte STZ }
	BRK

@on-mouse ( -> )
	.Mouse/state DEI DUP [ LIT &last-state $1 ] EQU ?{ DUP /state-changed } ,/last-state STR
	.Mouse/scrolly DEI2 NIP DUP #00 EQU ?{ DUP /scroll } POP
	BRK
&state-changed ( state -- )
	DUP ,/last-state LDR EOR ( changed-state ! )
	DUP #01 AND #00 EQU ?{ OVR /left }
	DUP #02 AND #00 EQU ?{ OVR /mid }
	DUP #04 AND #00 EQU ?{ OVR /right }
	POP2
	JMP2r
&left ( down? -- )
	#ffff ( backward ) ROT ?{ POP2 #0001 ( forward ) }
	.Bytebeat/v DEO2
	JMP2r
&mid ( down? -- )
	?{ JMP2r } #0000 .Bytebeat/v DEO2 ( stop )
	JMP2r
&right ( down? -- )
	?{ JMP2r } #0000 .Bytebeat/t DEO2 ( reset play position )
	JMP2r
&scroll ( scroll -- )
	.memory-byte LDZ ADD .memory-byte STZ
	JMP2r

@on-beat ( -> )
	.Bytebeat/t DEI2 memory
	NIP
	.Bytebeat/b DEO
	BRK

@forty-two ( t* -- b* )
	DUP2 #0a SFT2 #++42 AND2
	MUL2
	JMP2r

@memory ( t* -- b* )
	( play the 42 tune but controlled by a byte from memory  )
	DUP2 #0a SFT2 LIT2 00 -memory-byte LDZ AND2
	MUL2
	JMP2r

@t ( t* -- b* )
	JMP2r
